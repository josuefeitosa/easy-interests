// <auto-generated />
using System;
using EasyInterests.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyInterests.API.Infrastructure.Migrations
{
    [DbContext(typeof(EasyInterestsDBContext))]
    partial class EasyInterestsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("EasyInterests.API.Application.Models.Debt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("customer_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("due_date");

                    b.Property<int>("InterestInterval")
                        .HasColumnType("INTEGER")
                        .HasColumnName("interest_interval");

                    b.Property<double>("InterestPercentage")
                        .HasColumnType("REAL")
                        .HasColumnName("interest_percentage");

                    b.Property<int>("InterestType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("interest_type");

                    b.Property<double>("NegotiatorComissionPercentage")
                        .HasColumnType("REAL")
                        .HasColumnName("negotiator_comission_percent");

                    b.Property<int>("NegotiatorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("negotiator_id");

                    b.Property<double>("OriginalValue")
                        .HasColumnType("REAL")
                        .HasColumnName("original_value");

                    b.Property<int>("ParcelsQty")
                        .HasColumnType("INTEGER")
                        .HasColumnName("parcel_qty");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("NegotiatorId");

                    b.ToTable("debts");
                });

            modelBuilder.Entity("EasyInterests.API.Application.Models.DebtParcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DebtId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("debt_id");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("due_date");

                    b.Property<int>("Parcel")
                        .HasColumnType("INTEGER")
                        .HasColumnName("parcel");

                    b.Property<double>("Value")
                        .HasColumnType("REAL")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("DebtId");

                    b.ToTable("debt_parcels");
                });

            modelBuilder.Entity("EasyInterests.API.Application.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("phone_number");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("EasyInterests.API.Application.Models.Debt", b =>
                {
                    b.HasOne("EasyInterests.API.Application.Models.User", "Customer")
                        .WithMany("DebtsAsCustomer")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("EasyInterests.API.Application.Models.User", "Negotiator")
                        .WithMany("DebtsAsNegotiator")
                        .HasForeignKey("NegotiatorId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Negotiator");
                });

            modelBuilder.Entity("EasyInterests.API.Application.Models.DebtParcel", b =>
                {
                    b.HasOne("EasyInterests.API.Application.Models.Debt", "Debt")
                        .WithMany("Parcels")
                        .HasForeignKey("DebtId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Debt");
                });

            modelBuilder.Entity("EasyInterests.API.Application.Models.Debt", b =>
                {
                    b.Navigation("Parcels");
                });

            modelBuilder.Entity("EasyInterests.API.Application.Models.User", b =>
                {
                    b.Navigation("DebtsAsCustomer");

                    b.Navigation("DebtsAsNegotiator");
                });
#pragma warning restore 612, 618
        }
    }
}
